<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Chjinqi Blog</title>
  
  <subtitle>Vegetable Chicken</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://chjinqi.github.io/"/>
  <updated>2019-01-30T12:18:54.645Z</updated>
  <id>https://chjinqi.github.io/</id>
  
  <author>
    <name>Chjinqi</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>WC2019菜鸡游记</title>
    <link href="https://chjinqi.github.io/2019/01/30/WC2019/"/>
    <id>https://chjinqi.github.io/2019/01/30/WC2019/</id>
    <published>2019-01-30T12:17:00.000Z</published>
    <updated>2019-01-30T12:18:54.645Z</updated>
    
    <content type="html"><![CDATA[<p>前面的讲课非常的易懂，非常的不让人自闭，你甚至可以在WC2019上听量子计算</p><p>比赛题非常的好，一道传统题，一道题答题，一道交互题</p><p>由于我的电脑出现了某来自CCF的神秘力量，我的noi linux上面的操作栏没了，输入法还改不了，终端甚至要暴力枚举出快捷键打开，于是狗牌滚粗</p><p>社会活动非常的不好玩，不去竟然要惩罚</p><p>太菜了，不讲了</p><p>PS：今年的CCF和选手都很咕呢，果然咕的机构会教出咕的选手</p><p>PPS：闭幕式上dzd表示我们要<strong>[数据删除] </strong></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;前面的讲课非常的易懂，非常的不让人自闭，你甚至可以在WC2019上听量子计算&lt;/p&gt;
&lt;p&gt;比赛题非常的好，一道传统题，一道题答题，一道交互题&lt;/p&gt;
&lt;p&gt;由于我的电脑出现了某来自CCF的神秘力量，我的noi linux上面的操作栏没了，输入法还改不了，终端甚至要暴力枚举
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>模板库</title>
    <link href="https://chjinqi.github.io/2019/01/23/%E6%A8%A1%E6%9D%BF%E5%BA%93/"/>
    <id>https://chjinqi.github.io/2019/01/23/模板库/</id>
    <published>2019-01-23T15:35:02.000Z</published>
    <updated>2019-02-07T02:38:06.876Z</updated>
    
    <content type="html"><![CDATA[<h2 id="菜鸡的模板库。。。"><a href="#菜鸡的模板库。。。" class="headerlink" title="菜鸡的模板库。。。"></a>菜鸡的模板库。。。</h2><h2 id="有些代码没跑过（-），所以如果有错，请大佬们指出，蒟蒻会虚心接受的2333"><a href="#有些代码没跑过（-），所以如果有错，请大佬们指出，蒟蒻会虚心接受的2333" class="headerlink" title="有些代码没跑过（?），所以如果有错，请大佬们指出，蒟蒻会虚心接受的2333"></a>有些代码没跑过（?），所以如果有错，请大佬们指出，蒟蒻会虚心接受的2333</h2><h4 id="我是一条分割线（我也不知道为什么有一条分割线）"><a href="#我是一条分割线（我也不知道为什么有一条分割线）" class="headerlink" title="我是一条分割线（我也不知道为什么有一条分割线）"></a>我是一条分割线（我也不知道为什么有一条分割线）</h4><h2 id="数论"><a href="#数论" class="headerlink" title="数论"></a>数论</h2><ul><li><h3 id="BSGS以及扩展BSGS"><a href="#BSGS以及扩展BSGS" class="headerlink" title="BSGS以及扩展BSGS"></a>BSGS以及扩展BSGS</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="comment">//BSGS</span></span><br><span class="line"><span class="built_in">map</span>&lt;<span class="keyword">int</span>,<span class="keyword">int</span>&gt;Hash;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">BSGS</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123;</span><br><span class="line">x%=P,y%=P;</span><br><span class="line"><span class="keyword">if</span>(y==<span class="number">1</span>)<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>(!x&amp;&amp;!y)<span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(!x)<span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">Hash.clear();</span><br><span class="line"><span class="keyword">int</span> M=<span class="built_in">ceil</span>(<span class="built_in">sqrt</span>(P)),val=<span class="number">1</span>,k=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;M;++i)&#123;</span><br><span class="line">Hash[<span class="number">1l</span>l*val*y%P]=i;</span><br><span class="line">val=<span class="number">1l</span>l*val*x%P;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=M;;i+=M)&#123;</span><br><span class="line">k=<span class="number">1l</span>l*k*val%P;</span><br><span class="line"><span class="keyword">int</span> T=(Hash.find(k)==Hash.end())?<span class="number">-1</span>:Hash[k];</span><br><span class="line"><span class="keyword">if</span>(T!=<span class="number">-1</span>)<span class="keyword">return</span> i-T;</span><br><span class="line"><span class="keyword">if</span>(i&gt;P)<span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//扩展BSGS</span></span><br><span class="line"><span class="function">ll <span class="title">exbsgs</span><span class="params">(ll A,ll B,ll P)</span></span>&#123;</span><br><span class="line">A%=P,B%=P;</span><br><span class="line"><span class="keyword">if</span>(B==<span class="number">1</span>)<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>(!A&amp;&amp;!B)<span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(!A)<span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">ll cnt=<span class="number">0</span>,K=<span class="number">1</span>,d;</span><br><span class="line"><span class="keyword">while</span>((d=gcd(A,P))!=<span class="number">1</span>)&#123;</span><br><span class="line"><span class="keyword">if</span>(B%d)<span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">cnt++;</span><br><span class="line">B/=d,P/=d;</span><br><span class="line">K=K*(A/d)%P;</span><br><span class="line"><span class="keyword">if</span>(B==K)<span class="keyword">return</span> cnt;</span><br><span class="line">&#125;</span><br><span class="line">ll M=<span class="built_in">ceil</span>(<span class="built_in">sqrt</span>(P));</span><br><span class="line">Hash.clear();</span><br><span class="line">ll val=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(ll i=<span class="number">0</span>;i&lt;M;++i)&#123;</span><br><span class="line">Hash[val*B%P]=i;</span><br><span class="line">val=val*A%P;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(ll i=M;;i+=M)&#123;</span><br><span class="line">K=K*val%P;</span><br><span class="line"><span class="keyword">int</span> T=(Hash.find(K)==Hash.end())?<span class="number">-1</span>:Hash[K];</span><br><span class="line"><span class="keyword">if</span>(T!=<span class="number">-1</span>)<span class="keyword">return</span> i-T+cnt;</span><br><span class="line"><span class="keyword">if</span>(i&gt;P)<span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><h3 id="XXX变换-FFT-amp-NTT-amp-FWT"><a href="#XXX变换-FFT-amp-NTT-amp-FWT" class="headerlink" title="XXX变换(FFT&amp;NTT&amp;FWT)"></a>XXX变换(FFT&amp;NTT&amp;FWT)</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="comment">//系统FFT</span></span><br><span class="line"><span class="comment">////原始</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pi acos(-1)</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">FFT</span><span class="params">(<span class="keyword">complex</span>&lt;<span class="keyword">double</span>&gt;*T,<span class="keyword">int</span> len,<span class="keyword">int</span> ty)</span></span>&#123;</span><br><span class="line"><span class="keyword">complex</span>&lt;<span class="keyword">double</span>&gt;unit,mul,x,y;</span><br><span class="line"><span class="keyword">int</span> i,j,k,m;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;len;++i)&#123;</span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">0</span>,k=i,m=len<span class="number">-1</span>;m&gt;<span class="number">0</span>;j=(j&lt;&lt;<span class="number">1</span>)|(k&amp;<span class="number">1</span>),k&gt;&gt;=<span class="number">1</span>,m&gt;&gt;=<span class="number">1</span>);</span><br><span class="line"><span class="keyword">if</span>(i&lt;j)x=T[i],T[i]=T[j],T[j]=x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(m=<span class="number">1</span>;m&lt;len;m&lt;&lt;=<span class="number">1</span>)&#123;</span><br><span class="line">unit=<span class="built_in">exp</span>(<span class="keyword">complex</span>&lt;<span class="keyword">double</span>&gt;(<span class="number">0</span>,ty*pi/(<span class="keyword">double</span>)(m)));</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;len;i+=(m&lt;&lt;<span class="number">1</span>))&#123;</span><br><span class="line">mul=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;m;++j)&#123;</span><br><span class="line">x=T[i+j],y=T[i+j+m]*mul;</span><br><span class="line">T[i+j]=x+y,T[i+j+m]=x-y;</span><br><span class="line">mul*=unit;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">    <span class="keyword">if</span>(ty==<span class="number">1</span>)<span class="keyword">return</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;len;++i)T[i]=T[i]/len;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">////优化</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">cpx</span>&#123;</span></span><br><span class="line">    <span class="keyword">double</span> x,y;</span><br><span class="line">    cpx()&#123;&#125;</span><br><span class="line">    cpx(<span class="keyword">double</span> xx, <span class="keyword">double</span> yy)&#123;x=xx,y=yy;&#125;</span><br><span class="line">    <span class="keyword">friend</span> cpx <span class="keyword">operator</span> *(cpx a,cpx b)&#123;<span class="keyword">return</span> cpx(a.x*b.x-a.y*b.y,a.x*b.y+a.y*b.x);&#125;</span><br><span class="line">    <span class="keyword">friend</span> cpx <span class="keyword">operator</span> /(cpx a,<span class="keyword">double</span> b)&#123;<span class="keyword">return</span> cpx(a.x/b,a.y/b);&#125;</span><br><span class="line">    <span class="keyword">friend</span> cpx <span class="keyword">operator</span> +(cpx a,cpx b)&#123;<span class="keyword">return</span> cpx(a.x+b.x,a.y+b.y);&#125;</span><br><span class="line">    <span class="keyword">friend</span> cpx <span class="keyword">operator</span> -(cpx a,cpx b)&#123;<span class="keyword">return</span> cpx(a.x-b.x,a.y-b.y);&#125;</span><br><span class="line">    <span class="keyword">friend</span> cpx <span class="keyword">operator</span> *(cpx a,<span class="keyword">double</span> b)&#123;<span class="keyword">return</span> cpx(a.x*b,a.y*b);&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">BT</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> len=N+M+<span class="number">1</span>;</span><br><span class="line">    Len=<span class="number">1</span>,L=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(Len&lt;len)Len&lt;&lt;=<span class="number">1</span>,L++;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;Len;++i)rev[i]=(rev[i&gt;&gt;<span class="number">1</span>]&gt;&gt;<span class="number">1</span>|(i&amp;<span class="number">1</span>)&lt;&lt;(L<span class="number">-1</span>));</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">FFT</span><span class="params">(cpx *T,<span class="keyword">int</span> len,<span class="keyword">int</span> ty)</span></span>&#123;</span><br><span class="line">    cpx unit,mul,x,y;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;len;++i)<span class="keyword">if</span>(i&lt;rev[i])swap(T[i],T[rev[i]]);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> m=<span class="number">1</span>;m&lt;len;m&lt;&lt;=<span class="number">1</span>)&#123;</span><br><span class="line">        unit=cpx(<span class="built_in">cos</span>(pi/m),ty*<span class="built_in">sin</span>(pi/m));</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;len;i+=(m&lt;&lt;<span class="number">1</span>))&#123;</span><br><span class="line">            mul=cpx(<span class="number">1</span>,<span class="number">0</span>);</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;m;++j)&#123;</span><br><span class="line">                x=T[i+j],y=mul*T[i+j+m];</span><br><span class="line">                T[i+j]=x+y,T[i+j+m]=x-y;</span><br><span class="line">                mul=mul*unit;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(ty==<span class="number">1</span>)<span class="keyword">return</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;len;++i)T[i]=T[i]/len;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//NTT</span></span><br><span class="line"><span class="comment">////原始</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> P 998244353</span></span><br><span class="line"><span class="meta">#defien G 3</span></span><br><span class="line"><span class="function">ll <span class="title">ksm</span><span class="params">(ll a,ll b)</span></span>&#123;</span><br><span class="line">    ll ret=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(b)&#123;</span><br><span class="line">        <span class="keyword">if</span>(b&amp;<span class="number">1</span>)ret=ret*a%P;</span><br><span class="line">        a=a*a%P,b&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">NTT</span><span class="params">(ll *T,<span class="keyword">int</span> len,<span class="keyword">int</span> ty)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> unit,mul,x,y;</span><br><span class="line">    <span class="keyword">int</span> i,j,k,m;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;len;++i)&#123;</span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">0</span>,k=i,m=len<span class="number">-1</span>;m&gt;<span class="number">0</span>;j=(j&lt;&lt;<span class="number">1</span>)|(k&amp;<span class="number">1</span>),k&gt;&gt;=<span class="number">1</span>,m&gt;&gt;=<span class="number">1</span>);</span><br><span class="line"><span class="keyword">if</span>(i&lt;j)x=T[i],T[i]=T[j],T[j]=x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(m=<span class="number">1</span>;m&lt;len;m&lt;&lt;=<span class="number">1</span>)&#123;</span><br><span class="line">unit=ksm(G,(P<span class="number">-1</span>+ty*(P<span class="number">-1</span>)/(m&lt;&lt;<span class="number">1</span>))%(P<span class="number">-1</span>));</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;len;i+=(m&lt;&lt;<span class="number">1</span>))&#123;</span><br><span class="line">mul=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;m;++j)&#123;</span><br><span class="line">x=T[i+j],y=T[i+j+m]*mul%P;</span><br><span class="line">T[i+j]=(x+y)%P,T[i+j+m]=((x-y)%P+P)%P;</span><br><span class="line">mul=mul*unit%P;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">    <span class="keyword">if</span>(ty==<span class="number">1</span>)<span class="keyword">return</span>;</span><br><span class="line">    ll t=ksm(len,P<span class="number">-2</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;len;++i)T[i]=T[i]*t%P;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//拆系数NTT（找不到代码了）</span></span><br></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//FWT（到时候吧QAQ）</span></span><br></pre></td></tr></table></figure></li><li><h3 id="高斯消元"><a href="#高斯消元" class="headerlink" title="高斯消元"></a>高斯消元</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//高斯消元</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">gauss</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=N;++i)&#123;</span><br><span class="line"><span class="keyword">int</span> x=i;</span><br><span class="line"><span class="keyword">while</span>(!Map[x][i]&amp;&amp;x&lt;=N)x++;</span><br><span class="line"><span class="keyword">if</span>(x&gt;N)<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>(x!=i)<span class="keyword">for</span>(<span class="keyword">int</span> j=i;j&lt;=N;++j)swap(Map[i][j],Map[x][j]);</span><br><span class="line"><span class="keyword">int</span> inv=ksm(Map[i][i],P<span class="number">-2</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=i+<span class="number">1</span>;j&lt;=N;++j)&#123;</span><br><span class="line"><span class="keyword">if</span>(!Map[j][i])<span class="keyword">continue</span>;</span><br><span class="line"><span class="keyword">int</span> mul=Map[j][i]*inv%P;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> k=i;k&lt;=N;++k)Map[j][k]=(Map[j][k]-Map[i][k]*mul%P+P)%P;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><h3 id="行列式"><a href="#行列式" class="headerlink" title="行列式"></a>行列式</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//行列式</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">gauss</span><span class="params">()</span></span>&#123;<span class="comment">//去掉1行1列的余子式 </span></span><br><span class="line"><span class="keyword">int</span> ans=<span class="number">1</span>,cnt=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=N;++i)&#123;</span><br><span class="line"><span class="keyword">int</span> x=i;</span><br><span class="line"><span class="keyword">while</span>(!Map[x][i]&amp;&amp;x&lt;=N)x++;</span><br><span class="line"><span class="keyword">if</span>(x&gt;N)<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>(x!=i)&#123;</span><br><span class="line">cnt^=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=i;j&lt;=N;++j)swap(Map[i][j],Map[x][j]);</span><br><span class="line">&#125;</span><br><span class="line">ans=ans*Map[i][i]%P;</span><br><span class="line"><span class="keyword">int</span> inv=ksm(Map[i][i],P<span class="number">-2</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=i+<span class="number">1</span>;j&lt;=N;++j)&#123;</span><br><span class="line"><span class="keyword">if</span>(!Map[j][i])<span class="keyword">continue</span>;</span><br><span class="line"><span class="keyword">int</span> mul=Map[j][i]*inv%P;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> k=i;k&lt;=N;++k)Map[j][k]=(Map[j][k]-Map[i][k]*mul%P+P)%P;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(cnt)ans=(P-ans)%P;</span><br><span class="line"><span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><h3 id="线性基"><a href="#线性基" class="headerlink" title="线性基"></a>线性基</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//线性基</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">LB</span>&#123;</span></span><br><span class="line">ll v[<span class="number">65</span>];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(ll x)</span></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">61</span>;i&gt;=<span class="number">0</span>;--i)&#123;</span><br><span class="line"><span class="keyword">if</span>(x&amp;(<span class="number">1l</span>l&lt;&lt;i))&#123;</span><br><span class="line"><span class="keyword">if</span>(!v[i])&#123;v[i]=x;<span class="keyword">break</span>;&#125;</span><br><span class="line">x^=v[i];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">ll <span class="title">getmax</span><span class="params">()</span></span>&#123;</span><br><span class="line">ll ret=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">61</span>;i&gt;=<span class="number">0</span>;--i)ret=max(ret,ret^v[i]);</span><br><span class="line"><span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h2 id="图论"><a href="#图论" class="headerlink" title="图论"></a>图论</h2><ul><li><h3 id="网络流-sap-amp-dinic-amp-zkw"><a href="#网络流-sap-amp-dinic-amp-zkw" class="headerlink" title="网络流(sap&amp;dinic&amp;zkw)"></a>网络流(sap&amp;dinic&amp;zkw)</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//sap</span></span><br><span class="line"><span class="function">ll <span class="title">sap</span><span class="params">(<span class="keyword">int</span> u,ll flow)</span></span>&#123;<span class="comment">//注意编号从1开始(我太菜了QWQ)</span></span><br><span class="line"><span class="keyword">if</span>(u==T||!flow)<span class="keyword">return</span> flow;</span><br><span class="line">ll sum=<span class="number">0</span>,tmp;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=Last[u],v;i;i=Next[i])&#123;</span><br><span class="line">v=End[i];</span><br><span class="line"><span class="keyword">if</span>(Len[i]&amp;&amp;dis[u]==dis[v]+<span class="number">1</span>)&#123;</span><br><span class="line">tmp=sap(v,min(Len[i],flow-sum));</span><br><span class="line">Len[i]-=tmp,Len[i^<span class="number">1</span>]+=tmp;</span><br><span class="line">sum+=tmp;</span><br><span class="line"><span class="keyword">if</span>(sum==flow||dis[S]&gt;=T+<span class="number">1</span>)<span class="keyword">return</span> sum;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(dis[S]&gt;=T+<span class="number">1</span>)<span class="keyword">return</span> sum;</span><br><span class="line">cnt[dis[u]]--;</span><br><span class="line"><span class="keyword">if</span>(!cnt[dis[u]])dis[S]=T+<span class="number">1</span>;</span><br><span class="line">dis[u]++;</span><br><span class="line">cnt[dis[u]]++;</span><br><span class="line"><span class="keyword">return</span> sum;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//dinic</span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">findpath</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=Cnt;++i)dis[i]=<span class="number">-1</span>;</span><br><span class="line">    <span class="built_in">queue</span>&lt;<span class="keyword">int</span>&gt;Q;</span><br><span class="line">    dis[S]=<span class="number">0</span>,Q.push(S);</span><br><span class="line">    <span class="keyword">while</span>(Q.size())&#123;</span><br><span class="line">        <span class="keyword">int</span> u=Q.front();</span><br><span class="line">        Q.pop();</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=Last[u],v;i;i=Next[i])&#123;</span><br><span class="line">            v=End[i];</span><br><span class="line">            <span class="keyword">if</span>(Flow[i]&amp;&amp;(!~dis[v]))&#123;</span><br><span class="line">                dis[v]=dis[u]+<span class="number">1</span>,Q.push(v);</span><br><span class="line">                <span class="keyword">if</span>(v==T)<span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">dinic</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> flow)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(u==T)<span class="keyword">return</span> flow;</span><br><span class="line">    <span class="keyword">int</span> sum=<span class="number">0</span>,tmp;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=Last[u],v;i;i=Next[i])&#123;</span><br><span class="line">        v=End[i];</span><br><span class="line">        <span class="keyword">if</span>(Flow[i]&amp;&amp;dis[v]==dis[u]+<span class="number">1</span>)&#123;</span><br><span class="line">            tmp=dinic(v,min(flow-sum,Flow[i]));</span><br><span class="line">            sum+=tmp,Flow[i]-=tmp,Flow[i^<span class="number">1</span>]+=tmp;</span><br><span class="line">            <span class="keyword">if</span>(sum==flow)<span class="keyword">return</span> sum;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(!sum)dis[u]=<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">return</span> sum;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">maxflow</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">while</span>(findpath())Maxflow+=dinic(S,inf);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">aug</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> flow)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(u==T)&#123;</span><br><span class="line">        Mincost+=-dis[S]*flow,Maxflow+=flow;</span><br><span class="line">        <span class="keyword">return</span> flow;</span><br><span class="line">    &#125;</span><br><span class="line">    vis[u]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">int</span> sum=<span class="number">0</span>,tmp;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=Last[u],v;i;i=Next[i])&#123;</span><br><span class="line">        v=End[i];</span><br><span class="line">        <span class="keyword">if</span>(Flow[i]&amp;&amp;!vis[v]&amp;&amp;dis[u]-dis[v]+Cost[i]==<span class="number">0</span>)&#123;</span><br><span class="line">            tmp=aug(v,min(flow-sum,Flow[i]));</span><br><span class="line">            sum+=tmp;</span><br><span class="line">            Flow[i]-=tmp,Flow[i^<span class="number">1</span>]+=tmp;</span><br><span class="line">            <span class="keyword">if</span>(sum==flow)<span class="keyword">return</span> sum;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> sum;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">mdf</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> u,v,d=inf;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=o;++i)&#123;</span><br><span class="line">        <span class="keyword">if</span>(Flow[i]&amp;&amp;vis[u=St[i]]&amp;&amp;!vis[v=End[i]])d=min(d,dis[u]-dis[v]+Cost[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(d==inf)<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=S;i&lt;=T;++i)<span class="keyword">if</span>(vis[i])dis[i]-=d;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">zkw</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">do</span>&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=S;i&lt;=T;++i)vis[i]=<span class="number">0</span>;</span><br><span class="line">        aug(S,inf);</span><br><span class="line">    &#125;<span class="keyword">while</span>(mdf());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><h3 id="Tarjan"><a href="#Tarjan" class="headerlink" title="Tarjan"></a>Tarjan</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//Tarjan</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">tarjan</span><span class="params">(<span class="keyword">int</span> u)</span></span>&#123;</span><br><span class="line">vis[u]=<span class="number">1</span>,st.push(u);</span><br><span class="line">dfn[u]=low[u]=++vt;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=Last[u],v;i;i=Next[i])&#123;</span><br><span class="line">v=End[i];</span><br><span class="line"><span class="keyword">if</span>(!dfn[v])&#123;</span><br><span class="line">tarjan(v);</span><br><span class="line">low[u]=min(low[u],low[v]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(vis[v])low[u]=min(low[u],dfn[v]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(dfn[u]==low[u])&#123;</span><br><span class="line">suc++;</span><br><span class="line"><span class="keyword">int</span> tmp=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(tmp!=u)&#123;</span><br><span class="line">tmp=st.top();</span><br><span class="line">vis[tmp]=<span class="number">0</span>,st.pop();</span><br><span class="line">bel[tmp]=suc;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><h3 id="Kruskal重构树"><a href="#Kruskal重构树" class="headerlink" title="Kruskal重构树"></a>Kruskal重构树</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//Kruskal重构树</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">edge</span>&#123;</span><span class="comment">//NOI2018 归程</span></span><br><span class="line">    <span class="keyword">int</span> u,v,len,hight;</span><br><span class="line">    <span class="keyword">bool</span> <span class="keyword">operator</span>&lt;(<span class="keyword">const</span> edge &amp;x)<span class="keyword">const</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> hight&gt;x.hight;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;E[maxn];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> (x==fa[x])?x:fa[x]=find(fa[x]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">kl</span><span class="params">()</span></span>&#123;</span><br><span class="line">    sort(E+<span class="number">1</span>,E+<span class="number">1</span>+M);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=N;++i)fa[i]=i;</span><br><span class="line">    cnt=N;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>,tot=<span class="number">0</span>;i&lt;=M;++i)&#123;</span><br><span class="line">        <span class="keyword">int</span> U=find(E[i].u),V=find(E[i].v);</span><br><span class="line">        <span class="keyword">if</span>(U!=V)&#123;</span><br><span class="line">            val[++cnt]=E[i].hight;</span><br><span class="line">            fa[cnt]=cnt,fa[U]=fa[V]=cnt;</span><br><span class="line">            ins(cnt,U,<span class="number">0</span>),ins(cnt,V,<span class="number">0</span>);</span><br><span class="line">            <span class="keyword">if</span>(++tot==N<span class="number">-1</span>)<span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h2 id="字符串"><a href="#字符串" class="headerlink" title="字符串"></a>字符串</h2><ul><li><h3 id="Manacher"><a href="#Manacher" class="headerlink" title="Manacher"></a>Manacher</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//Manacher</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span>&#123;</span><br><span class="line">    H[<span class="number">0</span>]=<span class="number">-1</span>,H[<span class="number">1</span>]=<span class="number">0</span>,Len=<span class="number">2</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=N;++i)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>,H[Len]);</span><br><span class="line">        Len++,H[Len]=<span class="number">0</span>,Len++;</span><br><span class="line">&#125;</span><br><span class="line">    H[Len]=<span class="number">-2</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Manacher</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> ret=<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">int</span> Pos;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;Len;++i)&#123;</span><br><span class="line">        <span class="keyword">if</span>(i&lt;Max)R[i]=min(R[<span class="number">2</span>*Pos-i],Max-i+<span class="number">1</span>);</span><br><span class="line">        <span class="keyword">else</span> R[i]=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span>(H[i-R[i]]==H[i+R[i]])R[i]++;</span><br><span class="line">        <span class="keyword">if</span>(Max&lt;i+R[i]<span class="number">-1</span>)Max=i+R[i]<span class="number">-1</span>,Pos=i;</span><br><span class="line">        ret=max(ret,R[i]<span class="number">-1</span>);</span><br><span class="line">&#125;</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><h3 id="KMP"><a href="#KMP" class="headerlink" title="KMP"></a>KMP</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//KMP</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">KMP</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%s"</span>,A+<span class="number">1</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%s"</span>,B+<span class="number">1</span>);</span><br><span class="line"><span class="keyword">int</span> lenA=<span class="built_in">strlen</span>(A+<span class="number">1</span>);</span><br><span class="line"><span class="keyword">int</span> lenB=<span class="built_in">strlen</span>(B+<span class="number">1</span>);</span><br><span class="line"><span class="keyword">int</span> j=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=lenB;++i)&#123;</span><br><span class="line"><span class="keyword">while</span>(j&amp;&amp;B[j+<span class="number">1</span>]!=B[i])j=fail[j];</span><br><span class="line"><span class="keyword">if</span>(B[j+<span class="number">1</span>]==B[i])j++;</span><br><span class="line">fail[i]=j;</span><br><span class="line">&#125;</span><br><span class="line">j=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=lenA;++i)&#123;</span><br><span class="line"><span class="keyword">while</span>(j&gt;<span class="number">0</span>&amp;&amp;B[j+<span class="number">1</span>]!=A[i])j=fail[j];</span><br><span class="line"><span class="keyword">if</span>(B[j+<span class="number">1</span>]==A[i])j++;</span><br><span class="line"><span class="keyword">if</span>(j==lenB)&#123;</span><br><span class="line"><span class="comment">//xxx</span></span><br><span class="line">j=fail[j];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><h3 id="自动机-AC自动机-amp-后缀自动机"><a href="#自动机-AC自动机-amp-后缀自动机" class="headerlink" title="自动机(AC自动机&amp;后缀自动机)"></a>自动机(AC自动机&amp;后缀自动机)</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//AC自动机</span></span><br><span class="line"><span class="keyword">namespace</span> ACAM&#123;<span class="comment">//滑稽</span></span><br><span class="line">    <span class="keyword">int</span> ch[maxn&lt;&lt;<span class="number">1</span>][<span class="number">26</span>],fail[maxn&lt;&lt;<span class="number">1</span>],tot;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">extend</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%s"</span>,s+<span class="number">1</span>);</span><br><span class="line">        <span class="keyword">int</span> p=<span class="number">0</span>,t,len=<span class="built_in">strlen</span>(s+<span class="number">1</span>);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=len;++i)&#123;</span><br><span class="line">            t=s[i]-<span class="string">'a'</span>;</span><br><span class="line">            <span class="keyword">if</span>(!ch[p][t])ch[p][t]=++tot;</span><br><span class="line">            p=ch[p][t];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//xxx</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">getfail</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="built_in">queue</span>&lt;<span class="keyword">int</span>&gt;Q;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> t=<span class="number">0</span>;t&lt;<span class="number">26</span>;++t)<span class="keyword">if</span>(ch[<span class="number">0</span>][t])Q.push(ch[<span class="number">0</span>][t]);</span><br><span class="line">        <span class="keyword">while</span>(Q.size())&#123;</span><br><span class="line">            <span class="keyword">int</span> x=Q.front();</span><br><span class="line">Q.pop();</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> t=<span class="number">0</span>;t&lt;<span class="number">26</span>;++t)&#123;</span><br><span class="line"><span class="keyword">if</span>(ch[x][i])Q.push(ch[x][i]),fail[ch[x][i]]=ch[fail[x]][i];</span><br><span class="line"><span class="keyword">else</span> ch[x][i]=ch[fail[x]][i];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//后缀自动机</span></span><br><span class="line"><span class="keyword">namespace</span> SAM&#123;</span><br><span class="line">    <span class="built_in">map</span>&lt;ll,<span class="keyword">int</span>&gt;ch[maxn&lt;&lt;<span class="number">1</span>];</span><br><span class="line"><span class="keyword">int</span> par[maxn&lt;&lt;<span class="number">1</span>],mx[maxn&lt;&lt;<span class="number">1</span>];</span><br><span class="line"><span class="keyword">int</span> tot,las;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=tot;++i)ch[i].clear(),mx[i]=par[i]=<span class="number">0</span>;</span><br><span class="line">las=tot=<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">extend</span><span class="params">(ll c)</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> p=las,np=++tot;</span><br><span class="line">mx[np]=mx[p]+<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(;p&amp;&amp;(!ch[p].count(c));p=par[p])ch[p][c]=np;</span><br><span class="line">las=np;</span><br><span class="line"><span class="keyword">if</span>(!p)&#123;par[np]=<span class="number">1</span>;<span class="keyword">return</span>;&#125;</span><br><span class="line"><span class="keyword">int</span> q=ch[p][c];</span><br><span class="line"><span class="keyword">if</span>(mx[q]==mx[p]+<span class="number">1</span>)&#123;par[np]=q;<span class="keyword">return</span>;&#125;</span><br><span class="line"><span class="keyword">int</span> nq=++tot;</span><br><span class="line">ch[nq]=ch[q],mx[nq]=mx[p]+<span class="number">1</span>,par[nq]=par[q];</span><br><span class="line">par[q]=par[np]=nq;</span><br><span class="line"><span class="keyword">for</span>(;p&amp;&amp;ch[p].count(c)&amp;&amp;ch[p][c]==q;p=par[p])ch[p][c]=nq;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;菜鸡的模板库。。。&quot;&gt;&lt;a href=&quot;#菜鸡的模板库。。。&quot; class=&quot;headerlink&quot; title=&quot;菜鸡的模板库。。。&quot;&gt;&lt;/a&gt;菜鸡的模板库。。。&lt;/h2&gt;&lt;h2 id=&quot;有些代码没跑过（-），所以如果有错，请大佬们指出，蒟蒻会虚心接受的2333
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>BZOJ4663 Hack</title>
    <link href="https://chjinqi.github.io/2018/12/21/bzoj4663%20Hack/"/>
    <id>https://chjinqi.github.io/2018/12/21/bzoj4663 Hack/</id>
    <published>2018-12-20T16:24:00.000Z</published>
    <updated>2018-12-20T16:32:27.930Z</updated>
    
    <content type="html"><![CDATA[<h2 id="传送门"><a href="#传送门" class="headerlink" title="传送门"></a><a href="https://www.lydsy.com/JudgeOnline/problem.php?id=4663" target="_blank" rel="noopener">传送门</a></h2><h2 id="Newuser，直接秒掉了"><a href="#Newuser，直接秒掉了" class="headerlink" title="%%%Newuser，直接秒掉了"></a>%%%Newuser，直接秒掉了</h2><h4 id="一句话题意：割掉一些边使得S，T之间不连通且S-gt-T的路径上仅有一条割边"><a href="#一句话题意：割掉一些边使得S，T之间不连通且S-gt-T的路径上仅有一条割边" class="headerlink" title="一句话题意：割掉一些边使得S，T之间不连通且S-&gt;T的路径上仅有一条割边"></a>一句话题意：割掉一些边使得S，T之间不连通且S-&gt;T的路径上仅有一条割边</h4><p>考试题</p><p>首先看题面和数据范围，就可以知道跟最小割有关。</p><p>普通的最小割可以实现前一半，那么如何处理后一半呢？</p><p>先放一张样例</p><p><img src="https://t1.picb.cc/uploads/2018/12/20/JzzkKy.md.png" alt=""></p><p>直接跑最小割答案是2，即切掉1-&gt;3,2-&gt;4</p><p>但我们发现，那S-&gt;2-&gt;4-&gt;1-&gt;3-&gt;T这条路径上就有两条割边了</p><p>那么想让这种情况不成立，即使得这个割不是个割==&gt;使得S，T连通</p><p>我们可以连一条1-&gt;4的边使得S，T联通</p><p>为了防止这条边被割，我们把这条边的容量变为inf即可</p><p>那么我们可以给每条边连一条反向的容量为inf的边</p><p>因为最小割是所有正向割边的权值和，所以就算加边时加入了反向边，这种边被割了也不会对答案造成影响。</p><p>由于容量为inf，所以只会在其他方案都不成立时割这条边，那么答案若大于inf就输出-1</p><h3 id="你以为完了？？？"><a href="#你以为完了？？？" class="headerlink" title="你以为完了？？？"></a>你以为完了？？？</h3><p>再来看这个图</p><p><img src="https://t1.picb.cc/uploads/2018/12/20/Jzzwhc.md.png" alt=""></p><p>显然答案为2，只要割掉S-&gt;T就行了</p><p>但用上面的方法跑出来是7</p><p>为什么？</p><p>仔细一想，反向边虽然不影响答案，但会使得有些一开始不存在的S-&gt;T的路径存在，如S-&gt;1-&gt;T</p><p>那么一开始先把图连好，把S不能到的点标记了，再往网络流里加边。</p><p>因为到不了，所以跟到不了的点连的边自然也不用加入网络流了</p><p>于是你就A掉了此题</p><p>代码如下</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt; </span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> inf 0x3f3f3f3f3f3fll</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> maxn 10005</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> N,M;</span><br><span class="line"><span class="keyword">int</span> S,T;</span><br><span class="line"><span class="keyword">int</span> Last[maxn],Next[maxn],End[maxn],o=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">int</span> U[maxn],V[maxn];</span><br><span class="line">ll W[maxn];</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;G[maxn];</span><br><span class="line"><span class="keyword">bool</span> mark[maxn];</span><br><span class="line">ll Len[maxn];</span><br><span class="line">ll dis[maxn];</span><br><span class="line"><span class="keyword">int</span> cnt[maxn];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">ins</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b,ll c)</span></span>&#123;</span><br><span class="line">Next[++o]=Last[a],Last[a]=o;</span><br><span class="line">End[o]=b,Len[o]=c;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">inss</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b,ll c)</span></span>&#123;</span><br><span class="line">ins(a,b,c),ins(b,a,<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">ll <span class="title">sap</span><span class="params">(<span class="keyword">int</span> u,ll flow)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(u==T||!flow)<span class="keyword">return</span> flow;</span><br><span class="line">ll sum=<span class="number">0</span>,tmp;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=Last[u],v;i;i=Next[i])&#123;</span><br><span class="line">v=End[i];</span><br><span class="line"><span class="keyword">if</span>(Len[i]&amp;&amp;dis[u]==dis[v]+<span class="number">1</span>)&#123;</span><br><span class="line">tmp=sap(v,min(Len[i],flow-sum));</span><br><span class="line">Len[i]-=tmp,Len[i^<span class="number">1</span>]+=tmp;</span><br><span class="line">sum+=tmp;</span><br><span class="line"><span class="keyword">if</span>(sum==flow||dis[S]&gt;=T)<span class="keyword">return</span> sum;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(dis[S]&gt;=T)<span class="keyword">return</span> sum;</span><br><span class="line">cnt[dis[u]]--;</span><br><span class="line"><span class="keyword">if</span>(!cnt[dis[u]])dis[S]=T;</span><br><span class="line">dis[u]++;</span><br><span class="line">cnt[dis[u]]++;</span><br><span class="line"><span class="keyword">return</span> sum;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">bool</span> vis[maxn];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> u)</span></span>&#123;</span><br><span class="line">vis[u]=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>,v;i&lt;G[u].size();++i)&#123;</span><br><span class="line">v=G[u][i];</span><br><span class="line"><span class="keyword">if</span>(!vis[v])dfs(v);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;N,&amp;M);</span><br><span class="line">S=<span class="number">1</span>,T=N;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=M;++i)&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d%d%lld"</span>,&amp;U[i],&amp;V[i],&amp;W[i]);</span><br><span class="line">U[i]++,V[i]++;</span><br><span class="line">G[U[i]].push_back(V[i]);</span><br><span class="line">&#125;</span><br><span class="line">dfs(S);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=M;++i)&#123;</span><br><span class="line"><span class="keyword">if</span>(!vis[U[i]]||!vis[V[i]])<span class="keyword">continue</span>;</span><br><span class="line">inss(U[i],V[i],W[i]);</span><br><span class="line">inss(V[i],U[i],inf);</span><br><span class="line">&#125;</span><br><span class="line">ll ret=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(dis[S]&lt;T)&#123;</span><br><span class="line">ret+=sap(S,inf);</span><br><span class="line"><span class="keyword">if</span>(ret&gt;=inf)&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"-1"</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%lld"</span>,ret);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;传送门&quot;&gt;&lt;a href=&quot;#传送门&quot; class=&quot;headerlink&quot; title=&quot;传送门&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://www.lydsy.com/JudgeOnline/problem.php?id=4663&quot; target=&quot;_blan
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>震惊！！！某一liu姓男子竟然在ACM赛上做出这种事[点击展开]</title>
    <link href="https://chjinqi.github.io/2018/12/08/%E9%87%8D%E4%BA%A4ACM%E6%B8%B8%E8%AE%B0/"/>
    <id>https://chjinqi.github.io/2018/12/08/重交ACM游记/</id>
    <published>2018-12-08T12:32:30.000Z</published>
    <updated>2018-12-08T17:14:28.414Z</updated>
    
    <content type="html"><![CDATA[<p>%%%OBlack，Newuser，hdhd差点AK虐场（听说被卡常了233）</p><p>（分别是高三最强，高二最强，高一最强）</p><h2 id="上午"><a href="#上午" class="headerlink" title="上午"></a>上午</h2><p>报了到就去吃午饭，重交食堂竟然把所有菜混在一起。。。太冷了不说了</p><h2 id="下午"><a href="#下午" class="headerlink" title="下午"></a>下午</h2><p>12：40开考，考前在楼下闲逛</p><p>考前立了个flag，说图论，网络流都给我，结果就遭重了</p><p>拿到题，分到了C题，给你一个序列$f(i)=a * f(i-2)+b * f(i-1) $，每次操作往x序列$[l,r]$上分别加上$f(1),f(2)……f(r-l+1)$。</p><p>想起了原来做过的加斐波那契数列的题，于是直接差分</p><script type="math/tex; mode=display">cf(l)+=f(1)\\cf(l+1)-=b*f(1)\\cf(l+1)+=f(2)\\cf(r+1)+=f(r-l+2)\\cf(r+2)+=a*f(r-l+1)\\</script><p>然后算最后的数组时记下i-1，i-2位的值X，Y然后乘加乘加之类的就行了</p><p>然而打代码时石乐志，把最后的*a写成了*b，送了一发WA</p><p><strong>PS：我一开始打不来对拍真是太菜了</strong></p><p>然后把ABCDF做完后刚H题，光想着反悔堆了，殊不知网络流可以完美解决</p><p>我考试时还奶了一口，这题不会是图论吧233不可能的吧</p><p>然后成功奶中，白坐了一个小时。。。</p><p><strong>PSS：这告诉我们没事不要乱插旗（逃</strong></p><p><strong>PSSS：陶陶摘苹果这个队名真是太政治正确了</strong></p><p>没什么好说的，我的降智buff太强了，只有第六，被上面三位大佬吊锤</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;%%%OBlack，Newuser，hdhd差点AK虐场（听说被卡常了233）&lt;/p&gt;
&lt;p&gt;（分别是高三最强，高二最强，高一最强）&lt;/p&gt;
&lt;h2 id=&quot;上午&quot;&gt;&lt;a href=&quot;#上午&quot; class=&quot;headerlink&quot; title=&quot;上午&quot;&gt;&lt;/a&gt;上午&lt;/h2
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>ZJOI2017-树状数组</title>
    <link href="https://chjinqi.github.io/2018/11/28/%5BZjoi2017%5D%E6%A0%91%E7%8A%B6%E6%95%B0%E7%BB%84/"/>
    <id>https://chjinqi.github.io/2018/11/28/[Zjoi2017]树状数组/</id>
    <published>2018-11-27T17:31:00.000Z</published>
    <updated>2018-12-08T12:45:03.584Z</updated>
    
    <content type="html"><![CDATA[<h2 id="传送门：Zjoi2017-树状数组"><a href="#传送门：Zjoi2017-树状数组" class="headerlink" title="传送门：Zjoi2017-树状数组"></a>传送门：<a href="https://www.luogu.org/problemnew/show/P3688" target="_blank" rel="noopener">Zjoi2017-树状数组</a><br></h2><h2 id="吐槽：听说被分到了最简单的题。。。"><a href="#吐槽：听说被分到了最简单的题。。。" class="headerlink" title="吐槽：听说被分到了最简单的题。。。"></a>吐槽：<del>听说被分到了最简单的题。。。</del></h2><h3 id="体节："><a href="#体节：" class="headerlink" title="体节："></a><del>体节：</del></h3><p><del>我一看</del>，题目中的Find操作像是求后缀异或和，然后打打表发现就是后缀异或和QAQ</p><p>那么对于Query(l,r)，Right=XOR（l，r）（l-&gt;r的数异或和），Now=XOR（l-1，r-1）。</p><p>显然答案是否正确只跟l-1，r的修改次数之和的奇偶性有关，那么我们只需要维护对于每个查询的点对被修改成偶数次的概率就行了。。。</p><p>对于Modify（l，r），若（L，R）与（l，r）相交，那么（L，R）这个点对被修改的概率即为$\frac{1}{r-l+1}$。若被覆盖，被修改的概率即为$\frac{2}{r-l+1}$。</p><p>那么思路就比较清晰了，以l建外层线段树，以r建内层线段树，矩阵修改（三次），单点查询。因为是线段树上区间操作，而这又是树套树，所以直接下放lazy的复杂度是不对的，我们要用永久化标记，单点查询就是合并一下到根路径上的永久化标记就行了。</p><p>但是注意了，还有一个特殊情况没有考虑，就是Query（l，r）时l==1的时候。</p><p>此时，Right=XOR（1，r），Now=Find（r）-Find（l-1）=Find（r）-Find（0）=Find（r）=XOR（r，N）</p><p>这样的话特判一下，再开个线段树单独维护前缀异或和==后缀异或和的概率就行了</p><p>这里介绍一个巧妙的方法（%%%wxh）</p><p>Now=XOR（r，N）=XOR（1，N）$\otimes$XOR（1，r-1）</p><p>而XOR（1，N）就是总修改次数啊，直接用个cnt就行了</p><p>那么特殊情况转换为cnt为奇数时，输出r修改次数为奇数的概率；cnt为偶数时，输出r修改次数为偶数的概率，可以直接用（0，r）这个点对的概率得到</p><p>至于修改次数为偶数的概率的合并，无非是$P_{奇} * P_{奇}+P_{偶} * P_{偶}$，然后转换为%998244353意义下就行了</p><p>简短的代码</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> inf 0x3f3f3f3f</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> P 998244353</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> maxn 200005</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> N,M;</span><br><span class="line"><span class="keyword">int</span> ls[maxn*<span class="number">400</span>],rs[maxn*<span class="number">400</span>],tot;</span><br><span class="line"><span class="keyword">int</span> W[maxn*<span class="number">400</span>];<span class="comment">//和为奇数的概率</span></span><br><span class="line"><span class="keyword">int</span> rt[maxn&lt;&lt;<span class="number">4</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">ksm</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> ret=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>(b) &#123;</span><br><span class="line"><span class="keyword">if</span>(b&amp;<span class="number">1</span>)ret=<span class="number">1l</span>l*ret*a%P;</span><br><span class="line">b&gt;&gt;=<span class="number">1</span>,a=<span class="number">1l</span>l*a*a%P;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">merge</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> (<span class="number">1l</span>l*a*(P+<span class="number">1</span>-b)+<span class="number">1l</span>l*b*(P+<span class="number">1</span>-a))%P;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">modify</span><span class="params">(<span class="keyword">int</span> &amp;p,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> y1,<span class="keyword">int</span> y2,<span class="keyword">int</span> D)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span>(!p)p=++tot;</span><br><span class="line"><span class="keyword">if</span>(y1&lt;=l&amp;&amp;y2&gt;=r) &#123;</span><br><span class="line">W[p]=merge(W[p],D);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> mid=l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(y1&lt;=mid&amp;&amp;y2&gt;=l)modify(ls[p],l,mid,y1,y2,D);</span><br><span class="line"><span class="keyword">if</span>(y2&gt;=mid+<span class="number">1</span>&amp;&amp;y1&lt;=r)modify(rs[p],mid+<span class="number">1</span>,r,y1,y2,D);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Modify</span><span class="params">(<span class="keyword">int</span> p,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> x1,<span class="keyword">int</span> x2,<span class="keyword">int</span> y1,<span class="keyword">int</span> y2,<span class="keyword">int</span> D)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span>(x1&lt;=l&amp;&amp;x2&gt;=r) &#123;</span><br><span class="line">modify(rt[p],<span class="number">0</span>,N,y1,y2,D);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> mid=l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(x1&lt;=mid&amp;&amp;x2&gt;=l)Modify(p&lt;&lt;<span class="number">1</span>,l,mid,x1,x2,y1,y2,D);</span><br><span class="line"><span class="keyword">if</span>(x2&gt;=mid+<span class="number">1</span>&amp;&amp;x1&lt;=r)Modify(p&lt;&lt;<span class="number">1</span>|<span class="number">1</span>,mid+<span class="number">1</span>,r,x1,x2,y1,y2,D);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">query</span><span class="params">(<span class="keyword">int</span> p,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> y)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span>(!p)<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>(l==r)<span class="keyword">return</span> W[p];</span><br><span class="line"><span class="keyword">int</span> mid=l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="keyword">int</span> ret=W[p];</span><br><span class="line"><span class="keyword">if</span>(y&lt;=mid)ret=merge(ret,query(ls[p],l,mid,y));</span><br><span class="line"><span class="keyword">else</span> ret=merge(ret,query(rs[p],mid+<span class="number">1</span>,r,y));</span><br><span class="line"><span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Query</span><span class="params">(<span class="keyword">int</span> p,<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span>(l==r)<span class="keyword">return</span> query(rt[p],<span class="number">0</span>,N,y);</span><br><span class="line"><span class="keyword">int</span> mid=l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="keyword">int</span> ret=query(rt[p],<span class="number">0</span>,N,y);</span><br><span class="line"><span class="keyword">if</span>(x&lt;=mid)ret=merge(ret,Query(p&lt;&lt;<span class="number">1</span>,l,mid,x,y));</span><br><span class="line"><span class="keyword">else</span> ret=merge(ret,Query(p&lt;&lt;<span class="number">1</span>|<span class="number">1</span>,mid+<span class="number">1</span>,r,x,y));</span><br><span class="line"><span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;N,&amp;M);</span><br><span class="line"><span class="keyword">int</span> opt,x,y;</span><br><span class="line">    <span class="keyword">int</span> cnt=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=M; ++i) &#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>,&amp;opt,&amp;x,&amp;y);</span><br><span class="line"><span class="keyword">int</span> inv=ksm(y-x+<span class="number">1</span>,P<span class="number">-2</span>);</span><br><span class="line"><span class="keyword">if</span>(opt==<span class="number">1</span>) &#123;</span><br><span class="line">Modify(<span class="number">1</span>,<span class="number">0</span>,N,x,y,x,y,<span class="number">1l</span>l*<span class="number">2</span>*inv%P);</span><br><span class="line">Modify(<span class="number">1</span>,<span class="number">0</span>,N,<span class="number">0</span>,x<span class="number">-1</span>,x,y,inv);</span><br><span class="line">Modify(<span class="number">1</span>,<span class="number">0</span>,N,x,y,y+<span class="number">1</span>,N,inv);</span><br><span class="line">            cnt++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(opt==<span class="number">2</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span>(x==<span class="number">1</span>&amp;&amp;(cnt&amp;<span class="number">1</span>))<span class="built_in">printf</span>(<span class="string">"%d\n"</span>,Query(<span class="number">1</span>,<span class="number">0</span>,N,x<span class="number">-1</span>,y));</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,(P+<span class="number">1</span>-Query(<span class="number">1</span>,<span class="number">0</span>,N,x<span class="number">-1</span>,y))%P);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;传送门：Zjoi2017-树状数组&quot;&gt;&lt;a href=&quot;#传送门：Zjoi2017-树状数组&quot; class=&quot;headerlink&quot; title=&quot;传送门：Zjoi2017-树状数组&quot;&gt;&lt;/a&gt;传送门：&lt;a href=&quot;https://www.luogu.org/
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>NOIP2018滚粗记</title>
    <link href="https://chjinqi.github.io/2018/11/12/NOIP2018%E6%BB%9A%E7%B2%97%E8%AE%B0/"/>
    <id>https://chjinqi.github.io/2018/11/12/NOIP2018滚粗记/</id>
    <published>2018-11-11T16:24:00.000Z</published>
    <updated>2018-11-11T16:26:18.080Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Day-0"><a href="#Day-0" class="headerlink" title="Day 0"></a>Day 0</h2><p>去bs试机，见了鬼的键盘啊，空格左右悬空，回车则硬的一笔，摁不下去。。。</p><h2 id="Day1"><a href="#Day1" class="headerlink" title="Day1"></a>Day1</h2><p>听说是原题？？？<br>然而并没做过。。。<br>T1随手敲了个会被卡成 $N^2$ 的假分治。。。，随机极限数据后就不管了（我一定是脑抽了）<br>T2一眼没看出是背包，于是写了个同余系BFS判断当前数是否能被表示（反正不会T，然而空间开小了一些）<br>T3二分+贪心骗分啊。。。（一定是lg数据太水了竟然骗了95）<br>期望：100+100+95<br>（如果被卡：70+90+？）</p><h2 id="Day-2"><a href="#Day-2" class="headerlink" title="Day 2"></a>Day 2</h2><p>昨天水题今天神题？？？<br>T1写了个堆然后光荣的wa完了基环树的点（我好像还过完了大样例的233）<br>T2找规律啊。。。结果失智了啊，<br>N==2的规律是 $3^{M-1} * 4 $ 。。。<br>结果硬生生被我写成了组合数*2的幂。。。<br>（反正结果一样）<br>T3什么东西，只会$N^2$树形DP验证啊。。。然而，我SB调前面调了太久，打T3时太急了，一直过不了样例，只能爆0<br>期望：60+45+0。。。<br>是不是省一无望了啊</p><p>送给学长们的话：</p><blockquote><p><strong>一个个OIer的竞赛生涯总是从一场NOIP开始，大多也在一场NOIP中结束，好似一次次轮回在不断上演。<br>如果这次NOIP是你的起点，那么祝你的OI生涯如同夏花般绚烂。<br>如果这次NOIP是你的终点，那么祝你的OI回忆宛若繁星般璀璨。</strong></p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Day-0&quot;&gt;&lt;a href=&quot;#Day-0&quot; class=&quot;headerlink&quot; title=&quot;Day 0&quot;&gt;&lt;/a&gt;Day 0&lt;/h2&gt;&lt;p&gt;去bs试机，见了鬼的键盘啊，空格左右悬空，回车则硬的一笔，摁不下去。。。&lt;/p&gt;
&lt;h2 id=&quot;Day1&quot;&gt;&lt;a 
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>扩展BSGS</title>
    <link href="https://chjinqi.github.io/2018/11/06/%E6%89%A9%E5%B1%95BSGS/"/>
    <id>https://chjinqi.github.io/2018/11/06/扩展BSGS/</id>
    <published>2018-11-06T07:07:52.000Z</published>
    <updated>2018-11-06T07:58:59.053Z</updated>
    
    <content type="html"><![CDATA[<p>先看这样一个性质:</p><p>若A≡B(mod P)</p><p>假设d=gcd(A,P)，且B%d=0</p><p>则 $\frac{A}{d}$ ≡$\frac{B}{d}$(mod $\frac{P}{d}$)</p><p>所以只要B%d==0,就能一直化简直到d=gcd(A,P)=1</p><p>我们再来$a^x$ ≡b(mod P)</p><p>如果也能这样化简的话就能直接用BSGS做了</p><p>显然如果化简过程中B%d!=0，那么就无解</p><p>于是原方程可以写为$A^{x-cnt}​$  *  $\frac{A^{cnt}}{S}​$≡$\frac{B}{S}​$(mod $\frac{P}{S}​$) </p><p>( S=d1* d2* d3 * …  *dcnt)</p><p>换元，$A^{‘}$ ≡ $\frac{A^{x-cnt}}{S}$，$B^{‘}$≡$\frac{B}{S}$ ，$P^{‘}$≡$\frac{P}{S}$</p><p>此时 $P^{‘}$ 为质数，就用BSGS处理</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">ll exbsgs(ll A,ll B,ll P)&#123;</span><br><span class="line">A%=P,B%=P;</span><br><span class="line"><span class="keyword">if</span>(<span class="attribute">B</span>==1)return 0;</span><br><span class="line"><span class="keyword">if</span>(!A&amp;&amp;!B)return 1;</span><br><span class="line"><span class="keyword">if</span>(!A)return -1;</span><br><span class="line">ll <span class="attribute">cnt</span>=0;</span><br><span class="line">ll <span class="attribute">K</span>=1;</span><br><span class="line">ll d;</span><br><span class="line"><span class="keyword">while</span>((<span class="attribute">d</span>=gcd(A,P))!=1)&#123;</span><br><span class="line"><span class="keyword">if</span>(B%d)return -1;</span><br><span class="line">cnt++;</span><br><span class="line">B/=d,P/=d;</span><br><span class="line"><span class="attribute">K</span>=K*(A/d)%P;</span><br><span class="line"><span class="keyword">if</span>(<span class="attribute">B</span>==K)return cnt;</span><br><span class="line">&#125;</span><br><span class="line">ll <span class="attribute">M</span>=ceil(sqrt(P));</span><br><span class="line">Hash.clear();</span><br><span class="line">ll <span class="attribute">val</span>=1;</span><br><span class="line"><span class="keyword">for</span>(ll <span class="attribute">i</span>=0;i&lt;M;++i)&#123;</span><br><span class="line">Hash[val<span class="number">*B</span>%P]=i;</span><br><span class="line"><span class="attribute">val</span>=val*A%P;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(ll <span class="attribute">i</span>=M;;i+=M)&#123;</span><br><span class="line"><span class="attribute">K</span>=K*val%P;</span><br><span class="line"><span class="keyword">if</span>(Hash.count(K))return i-Hash[K]+cnt;</span><br><span class="line"><span class="keyword">if</span>(i&gt;P)break;</span><br><span class="line">&#125;</span><br><span class="line">return -1;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>PSS：用map存可能会TLE（？？？）所以最好用哈希表</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;先看这样一个性质:&lt;/p&gt;
&lt;p&gt;若A≡B(mod P)&lt;/p&gt;
&lt;p&gt;假设d=gcd(A,P)，且B%d=0&lt;/p&gt;
&lt;p&gt;则 $\frac{A}{d}$ ≡$\frac{B}{d}$(mod $\frac{P}{d}$)&lt;/p&gt;
&lt;p&gt;所以只要B%d==0,就能一直化简
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>铁路运输</title>
    <link href="https://chjinqi.github.io/2018/10/31/%E9%93%81%E8%B7%AF%E8%BF%90%E8%BE%93/"/>
    <id>https://chjinqi.github.io/2018/10/31/铁路运输/</id>
    <published>2018-10-31T15:58:00.000Z</published>
    <updated>2018-11-03T15:37:15.873Z</updated>
    
    <content type="html"><![CDATA[<h2 id="铁路运费-train-pas-c-cpp"><a href="#铁路运费-train-pas-c-cpp" class="headerlink" title="铁路运费 (train.pas/c/cpp)"></a>铁路运费 (train.pas/c/cpp)</h2><h3 id="吐槽：今天摸你赛好颓啊。。。"><a href="#吐槽：今天摸你赛好颓啊。。。" class="headerlink" title="吐槽：今天摸你赛好颓啊。。。"></a>吐槽：今天摸你赛好颓啊。。。</h3><h3 id="【问题描述】"><a href="#【问题描述】" class="headerlink" title="【问题描述】"></a>【问题描述】</h3><ul><li><p>CSSYZ 国有 N 个城市，依次编号为 1, 2, …, N。城市 1 是 CSSYZ 国的首都。该国的铁路公司只有1家，由FYT垄断经营，FYT公司运营着M条路线。路线被编号为1, 2, …M，第 i 条线路(1&lt;=i&lt;=M)双向连接着城市 Ui和城市 Vi。城市间的移动方式只有铁路。任意两个城市之间都能通过若干条铁路互通，即任意两个城市之间，直接连接的路线最多只有 1 条；对于任一城市，从该市总是可以通过若干条路线到达城市 1。</p></li><li><p>现在所有路线的运费都是 1 元。陷于经营困境的 FYT 计划在今后 Q 年间提高若干条路线的运费。在这个计划里，第 j 年(1&lt;=j&lt;=Q)的年初将把路线 Rj的运费从 1 元提升到2 元。被提价过一次的路线的运费将一直是 2 元，不会再次提价。此外，FYT 的铁路公司每年还会调查每个城市的市民的满意度。计划开始前，每个城市的市民都表示满意，但提价之后，可能会出现表示不满的市民。每年的满意度调查都在当年的提价完成之后进行。所以进行第 j 年(1&lt;=j&lt;=Q)的满意度调查时，路线 R1, R2, …, Rj的运费提升已经完成，此外的路线还没有被提价。第 j 年的满意度调查里，如果城市 k(2&lt;=k&lt;=N)的市民从城市 k 到首都城市 1 的费用的最小值比计划开始前的最小费用要高，则会对铁路公司表示不满。</p></li><li><p>如果路线经过多条铁路，费用是各条路线的运费的和。城市 1 的市民不会对铁路公司表示不满。另外请注意，提价后获得最小费用要使用的路线可能跟计划开始前的不一样。在整个计划开始之前，对于今后 Q 年间市民的满意度调查，FYT 希望计算存在不满市民的城市个数。请写出一个程序，给定 CSSYZ 国的铁路路线信息和提价计划，输出每次满意度调查里存在不满市民的城市个数。</p></li></ul><h3 id="【输入】"><a href="#【输入】" class="headerlink" title="【输入】"></a>【输入】</h3><ul><li><p>第一行为 3 个用空格隔开的整数 N, M, Q。N 为城市个数，M 为路线条数，Q 为提价计划的执行年数。</p></li><li><p>接下来 M 行中第 i 行(1&lt;=i&lt;=M)为两个用空格隔开的整数 Ui, Vi，表示第 i 条路线连接着城市 Ui和 Vi。</p></li><li><p>接下来 Q 行中第 j 行(1&lt;=j&lt;=Q)为整数 Rj，表示计划的第 j 年将提升路线 Rj的运费。</p></li></ul><h3 id="【输出】"><a href="#【输出】" class="headerlink" title="【输出】"></a>【输出】</h3><p>输出 Q 行，第 j 行(1&lt;=j&lt;=Q)表示第 j 年的满意度调查中存在不满市民的城市个数。</p><h3 id="【输入输出样例1】"><a href="#【输入输出样例1】" class="headerlink" title="【输入输出样例1】"></a>【输入输出样例1】</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">5 </span><span class="number">6</span> <span class="number">5</span></span><br><span class="line"><span class="symbol">1 </span><span class="number">2</span></span><br><span class="line"><span class="symbol">1 </span><span class="number">3</span></span><br><span class="line"><span class="symbol">4 </span><span class="number">2</span></span><br><span class="line"><span class="symbol">3 </span><span class="number">2</span></span><br><span class="line"><span class="symbol">2 </span><span class="number">5</span></span><br><span class="line"><span class="symbol">5 </span><span class="number">3</span></span><br><span class="line"><span class="number">5</span></span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">4</span></span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">3</span></span><br></pre></td></tr></table></figure><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">0</span></span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">4</span></span><br><span class="line"><span class="number">4</span></span><br></pre></td></tr></table></figure><h3 id="【输入输出样例2】"><a href="#【输入输出样例2】" class="headerlink" title="【输入输出样例2】"></a>【输入输出样例2】</h3><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">4 </span><span class="number">6</span> <span class="number">6</span></span><br><span class="line"><span class="symbol">1 </span><span class="number">2</span></span><br><span class="line"><span class="symbol">1 </span><span class="number">3</span></span><br><span class="line"><span class="symbol">1 </span><span class="number">4</span></span><br><span class="line"><span class="symbol">2 </span><span class="number">3</span></span><br><span class="line"><span class="symbol">2 </span><span class="number">4</span></span><br><span class="line"><span class="symbol">3 </span><span class="number">4</span></span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">4</span></span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">5</span></span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="number">6</span></span><br></pre></td></tr></table></figure><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="number">3</span></span><br></pre></td></tr></table></figure><h3 id="【数据范围】"><a href="#【数据范围】" class="headerlink" title="【数据范围】"></a>【数据范围】</h3><ul><li><p>25%的数据满足：N&lt;=100，M&lt;=4 950，Q&lt;=30；</p></li><li><p>50%的数据满足：Q&lt;=30；75%的数据满足：输出结果里出现的不同数最多50种；</p></li><li><p>100%的数据满足：2 ≦ N ≦ 100 000，1 ≦ Q ≦ M ≦ 200 000，1 ≦ Ui ≦ N， 1 ≦ Vi ≦ N，Ui != Vi ，1 ≦ Rj ≦ M，Rj != Rk (1 ≦ j &lt; k ≦ Q）</p></li></ul><h3 id="题解。。。（膜拜hdhd）"><a href="#题解。。。（膜拜hdhd）" class="headerlink" title="题解。。。（膜拜hdhd）"></a>题解。。。（膜拜hdhd）</h3><h4 id="由于当时我在颓。。。没仔细想啊我太弱了"><a href="#由于当时我在颓。。。没仔细想啊我太弱了" class="headerlink" title="由于当时我在颓。。。没仔细想啊我太弱了"></a>由于当时我在颓。。。没仔细想啊<del>我太弱了</del></h4><h4 id="把原图改为只有1到各点为最短路的图，于是改边权可变为删边（具体原理，用心体会）"><a href="#把原图改为只有1到各点为最短路的图，于是改边权可变为删边（具体原理，用心体会）" class="headerlink" title="把原图改为只有1到各点为最短路的图，于是改边权可变为删边（具体原理，用心体会）"></a>把原图改为只有1到各点为最短路的图，于是改边权可变为删边（具体原理，用心体会）</h4><h4 id="于是最后查询时，若这条边的点入度为零就删点，因为此时这个点到1不是最短路，所以ans"><a href="#于是最后查询时，若这条边的点入度为零就删点，因为此时这个点到1不是最短路，所以ans" class="headerlink" title="于是最后查询时，若这条边的点入度为零就删点，因为此时这个点到1不是最短路，所以ans++"></a>于是最后查询时，若这条边的点入度为零就删点，因为此时这个点到1不是最短路，所以ans++</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//丢个代码溜了呀，再次膜拜hdhd</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> inf 0x3f3f3f3f</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> maxn 100005</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> N,M,Q;</span><br><span class="line"><span class="keyword">int</span> Last[maxn],Next[maxn&lt;&lt;<span class="number">2</span>],End[maxn&lt;&lt;<span class="number">2</span>],o=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">int</span> dis[maxn];</span><br><span class="line"><span class="keyword">int</span> belong[maxn&lt;&lt;<span class="number">1</span>],id[maxn&lt;&lt;<span class="number">1</span>];</span><br><span class="line"><span class="keyword">int</span> du[maxn];</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;G[maxn];</span><br><span class="line"><span class="keyword">bool</span> del[maxn];</span><br><span class="line"><span class="keyword">int</span> ans;</span><br><span class="line"><span class="built_in">queue</span>&lt;<span class="keyword">int</span>&gt;Qu;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">ins</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span>&#123;</span><br><span class="line">End[++o]=b;</span><br><span class="line">Next[o]=Last[a];</span><br><span class="line">Last[a]=o;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">inss</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span>&#123;</span><br><span class="line">ins(a,b),ins(b,a);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Del</span><span class="params">(<span class="keyword">int</span> u)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(del[u])<span class="keyword">return</span>;</span><br><span class="line">del[u]=<span class="number">1</span>;</span><br><span class="line">ans++;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>,v;i&lt;G[u].size();++i)&#123;</span><br><span class="line">v=G[u][i];</span><br><span class="line"><span class="keyword">if</span>(v&lt;<span class="number">0</span>)<span class="keyword">continue</span>;</span><br><span class="line">--du[v];</span><br><span class="line">G[u][i]=<span class="number">-1</span>;</span><br><span class="line"><span class="keyword">if</span>(!du[v])Del(v);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>,&amp;N,&amp;M,&amp;Q);</span><br><span class="line"><span class="keyword">int</span> a,b;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=M;++i)&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;a,&amp;b),inss(a,b);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=N;++i)dis[i]=inf;</span><br><span class="line">Qu.push(<span class="number">1</span>);</span><br><span class="line"><span class="keyword">while</span>(Qu.size())&#123;</span><br><span class="line"><span class="keyword">int</span> u=Qu.front();</span><br><span class="line">Qu.pop();</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=Last[u],v;i;i=Next[i])&#123;</span><br><span class="line">v=End[i];</span><br><span class="line"><span class="keyword">if</span>(dis[v]&gt;dis[u]+<span class="number">1</span>)&#123;</span><br><span class="line">dis[v]=dis[u]+<span class="number">1</span>;</span><br><span class="line">Qu.push(v);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> u=<span class="number">1</span>;u&lt;=N;++u)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=Last[u],v;i;i=Next[i])&#123;</span><br><span class="line">v=End[i];</span><br><span class="line"><span class="keyword">if</span>(dis[v]==dis[u]+<span class="number">1</span>)&#123;</span><br><span class="line">++du[v];</span><br><span class="line">belong[i&gt;&gt;<span class="number">1</span>]=u;</span><br><span class="line">id[i&gt;&gt;<span class="number">1</span>]=G[u].size();</span><br><span class="line">G[u].push_back(v);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> tmp;</span><br><span class="line"><span class="keyword">while</span>(Q--)&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;tmp);</span><br><span class="line"><span class="keyword">if</span>(!belong[tmp])&#123;<span class="comment">//不在最短路中 </span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> u=belong[tmp],v=G[u][id[tmp]];</span><br><span class="line"><span class="keyword">if</span>(v&lt;<span class="number">0</span>)&#123;<span class="comment">//边删了 </span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line">G[u][id[tmp]]=<span class="number">-1</span>;</span><br><span class="line">--du[v];</span><br><span class="line"><span class="keyword">if</span>(!du[v])Del(v);<span class="comment">//若入度为零就删点，此时这个点到1不是最短路即ans++ </span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;铁路运费-train-pas-c-cpp&quot;&gt;&lt;a href=&quot;#铁路运费-train-pas-c-cpp&quot; class=&quot;headerlink&quot; title=&quot;铁路运费 (train.pas/c/cpp)&quot;&gt;&lt;/a&gt;铁路运费 (train.pas/c/cpp)&lt;/
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>同余系BFS</title>
    <link href="https://chjinqi.github.io/2018/10/29/%E5%90%8C%E4%BD%99%E7%B1%BBBFS/"/>
    <id>https://chjinqi.github.io/2018/10/29/同余类BFS/</id>
    <published>2018-10-28T16:46:52.000Z</published>
    <updated>2018-12-08T13:35:28.213Z</updated>
    
    <content type="html"><![CDATA[<h1 id="题目链接：P3403-跳楼机"><a href="#题目链接：P3403-跳楼机" class="headerlink" title="题目链接：P3403 跳楼机"></a>题目链接：<a href="https://www.luogu.org/problemnew/show/P3403" target="_blank" rel="noopener">P3403 跳楼机</a></h1><h3 id="题目意思：给定x-y-z-H-求x-y-z由加法能得到的H以内的数的个数。"><a href="#题目意思：给定x-y-z-H-求x-y-z由加法能得到的H以内的数的个数。" class="headerlink" title="题目意思：给定x,y,z,H,求x,y,z由加法能得到的H以内的数的个数。"></a>题目意思：给定x,y,z,H,求x,y,z由加法能得到的H以内的数的个数。</h3><h2 id="体节-："><a href="#体节-：" class="headerlink" title="体节 ："></a><del>体节</del> ：</h2><p>乍一看是个数论，心里一想，不对~~~~<br>于是蒟蒻只能去学了一发同余系BFS（%%%Newuser大佬）<br>那这题就成了模板啦！<br>设x为x,y,z最小的，在模x意义下，由i-&gt;(i+y)%x，权值为y；由i-&gt;(i+z)%x，权值为z。<br>最后跑一遍最短路或BFS，求出dis[i],那么dis[i]+k*x都能取到，于是此题得解。<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> maxn 100005</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line">ll H;</span><br><span class="line"><span class="keyword">int</span> P[<span class="number">4</span>];</span><br><span class="line">ll dis[maxn];</span><br><span class="line"><span class="keyword">bool</span> vis[maxn];</span><br><span class="line"><span class="keyword">int</span> Last[maxn],Next[maxn&lt;&lt;<span class="number">1</span>],End[maxn&lt;&lt;<span class="number">1</span>],Len[maxn&lt;&lt;<span class="number">1</span>],o;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">ins</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b,<span class="keyword">int</span> c)</span></span>&#123;</span><br><span class="line">    End[++o]=b;</span><br><span class="line">    Next[o]=Last[a];</span><br><span class="line">    Last[a]=o;</span><br><span class="line">    Len[o]=c;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">spfa</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line">    <span class="built_in">queue</span>&lt;<span class="keyword">int</span>&gt;Q;</span><br><span class="line">    <span class="built_in">memset</span>(dis,<span class="number">0x3f</span>,<span class="keyword">sizeof</span>(dis));</span><br><span class="line">    dis[x]=<span class="number">1</span>;</span><br><span class="line">    vis[x]=<span class="number">1</span>;</span><br><span class="line">    Q.push(x);</span><br><span class="line">    <span class="keyword">while</span>(Q.size())&#123;</span><br><span class="line">        <span class="keyword">int</span> u=Q.front();</span><br><span class="line">        Q.pop();</span><br><span class="line">        vis[u]=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=Last[u],v;i;i=Next[i])&#123;</span><br><span class="line">            v=End[i];</span><br><span class="line">            <span class="keyword">if</span>(dis[u]+Len[i]&lt;dis[v])&#123;</span><br><span class="line">                dis[v]=dis[u]+Len[i];</span><br><span class="line">                <span class="keyword">if</span>(!vis[v])&#123;</span><br><span class="line">                    vis[v]=<span class="number">1</span>;</span><br><span class="line">                    Q.push(v);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%lld%d%d%d"</span>,&amp;H,&amp;P[<span class="number">1</span>],&amp;P[<span class="number">2</span>],&amp;P[<span class="number">3</span>]);</span><br><span class="line">    sort(P+<span class="number">1</span>,P+<span class="number">3</span>);</span><br><span class="line">    <span class="keyword">if</span>(P[<span class="number">1</span>]==<span class="number">1</span>)&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%lld"</span>,H);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;P[<span class="number">1</span>];++i)&#123;</span><br><span class="line">        <span class="keyword">int</span> pos2=(i+P[<span class="number">2</span>])%P[<span class="number">1</span>];</span><br><span class="line">        <span class="keyword">int</span> pos3=(i+P[<span class="number">3</span>])%P[<span class="number">1</span>];</span><br><span class="line">        ins(i,pos2,P[<span class="number">2</span>]),ins(i,pos3,P[<span class="number">3</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">    spfa(<span class="number">1</span>);</span><br><span class="line">    ll ans=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;P[<span class="number">1</span>];++i)&#123;</span><br><span class="line">        <span class="keyword">if</span>(dis[i]&lt;=H)&#123;</span><br><span class="line">            ans+=(H-dis[i])/P[<span class="number">1</span>]+<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%lld"</span>,ans);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p><del>NOIP来了，看似慌得一笔实际慌得一笔，只有%大佬们才能攒人品呢。</del></p><figure class="highlight cos"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="built_in">%hdhd</span>&amp;&amp;<span class="built_in">%PHD</span>&amp;&amp;<span class="built_in">%Newuser</span>&amp;&amp;<span class="built_in">%Washington</span>)RP++<span class="comment">;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;题目链接：P3403-跳楼机&quot;&gt;&lt;a href=&quot;#题目链接：P3403-跳楼机&quot; class=&quot;headerlink&quot; title=&quot;题目链接：P3403 跳楼机&quot;&gt;&lt;/a&gt;题目链接：&lt;a href=&quot;https://www.luogu.org/problemn
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>ZROJ2018D6T1--萌新拆塔</title>
    <link href="https://chjinqi.github.io/2018/08/10/ZROJ2018D6T1-%E8%90%8C%E6%96%B0%E6%8B%86%E5%A1%94/"/>
    <id>https://chjinqi.github.io/2018/08/10/ZROJ2018D6T1-萌新拆塔/</id>
    <published>2018-08-10T07:31:52.000Z</published>
    <updated>2018-08-10T16:42:52.947Z</updated>
    
    <content type="html"><![CDATA[<h1 id="传送门：ZROJ2018D6T1—萌新拆塔"><a href="#传送门：ZROJ2018D6T1—萌新拆塔" class="headerlink" title="传送门：ZROJ2018D6T1—萌新拆塔"></a><strong>传送门：</strong><a href="http://zhengruioi.com/problem/261" target="_blank" rel="noopener">ZROJ2018D6T1—萌新拆塔</a><br></h1><h1 id="注：杜老师出题"><a href="#注：杜老师出题" class="headerlink" title="注：杜老师出题~~~"></a>注：杜老师出题~~~</h1><h3 id="题面："><a href="#题面：" class="headerlink" title="题面："></a><strong>题面：</strong></h3><ul><li>作为一场自闭模拟赛，需要一道10k模拟加玄学剪枝题。<br></li><li>在魔塔这个游戏中，勇士有四个数值，血量，攻击，防御和魔防。怪物也有三个数值，血量，攻击和防御。勇士和怪物攻击方式一般是这样的，双方轮流攻击，每回合造成自己攻击减去对方防御的伤害，如果自己的攻击比对方的防御低，那么无法对对方造成伤害。如果怪物血量变得小于等于0，那么怪物死亡，勇士获胜。如果勇士的攻击不超过怪物的防御，那么无法战斗。在一场战斗后，如果怪兽造成的总伤害超过了自己的魔防，那么消耗的血量为总伤害减去自己的魔防值，否则伤害为0。勇士必须保证战斗之后剩余的血量大于0。</li><li>一般来说，都是勇士先攻击。但是怪物有一些特殊属性：</li><li>先攻：第一个回合由怪物先攻击。</li><li>魔攻：怪物会无视勇士的防御，你可以认为在战斗的时候勇士的防御为0。</li><li>二连击：怪物每回合攻击两次。</li><li>模仿：怪物的攻防与勇士的攻防相同。</li><li>这四个特殊属性都是可以任意叠加的。</li><li>这个魔塔里面有n个怪，每个怪后面都守着一个宝石，每个宝石都能对血量，攻击，防御和魔防这些数值有所增益。同时打怪之间有一些先后顺序，比如说如果怪v被怪u挡住了，那么我们只能先打u再打v。所以我们会有k条规则，表示u这个怪必须在v之前打。</li><li>你可以需要按一定顺序去清怪和吃宝石，吃宝石之前要求守着这个宝石的怪被杀死。</li><li>请问杀完所有的怪剩下的最多能剩多少血量。</li></ul><h3 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式:"></a>输入格式:</h3><ul><li>第一行一个整数T，表示数据组数。</li><li>每组数据第一行四个整数，表示$h,a,d,m$，表示勇士的初始血量，攻击，防御与魔防。$(1≤h≤10^9,1≤a,d≤10^5,0≤m≤10^5)$</li><li>接下来一行一个数字n，表示怪的数量。</li><li>接下来n行，每行八个数字，表示$H,A,D,S,ap,dp,mp,hp$，表示怪物的血量，攻击，防御，属性，以及怪物守的宝石能增加的攻击，防御，魔防和血量。        $(1≤H,A,D≤10^5,0≤S≤15,0≤ap,dp,mp≤10^4,1≤hp≤10^9)$</li><li>怪物的属性由二进制表示，如果有先攻属性，那么S增加1，魔攻增加2，二连击增加4，模仿增加8。</li><li>接下来一行一个整数k，表示有k条规则。接下来k行，每行两个正整数$u,v(1≤u&lt;v≤n)$，表示怪u必须在怪v之前杀死。</li></ul><h3 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h3><ul><li>对于每组数据输出一行，表示杀完所有的怪剩下的最多血量。如果无法清完所有怪，那么输出−1。</li></ul><h3 id="样例"><a href="#样例" class="headerlink" title="样例:"></a>样例:</h3><ul><li><p><strong>样例输入:<br>1<br>20 2 2 0<br>10<br>2 2 0 0 2 0 0 80<br>18 8 0 0 0 0 0 20<br>40 6 1 0 2 0 0 40<br>42 7 3 0 1 0 0 40<br>10 10 5 0 0 2 0 40<br>25 5 0 0 0 0 0 20<br>35 4 1 0 0 1 0 20<br>60 7 2 0 1 1 0 40<br>32 8 2 0 0 0 0 60<br>160 15 0 0 0 0 0 0<br>9<br>1 2<br>2 3<br>1 4<br>4 5<br>1 6<br>6 7<br>6 8<br>7 9<br>4 10</strong></p></li><li><p><strong>样例输出:<br>-1</strong></p></li></ul><h3 id="限制与规定："><a href="#限制与规定：" class="headerlink" title="限制与规定："></a>限制与规定：</h3><ul><li>对于 20% 的数据，有 1≤n≤5,k=0，所有怪物没有特殊属性。</li><li>对于 40% 的数据，有 1≤n≤8,k=0，所有怪物没有特殊属性。</li><li>对于另外 20% 的数据，有 1≤n≤14,k≤100，所有怪物没有特殊属性。</li><li>对于另外 20% 的数据，有 1≤n≤8,k≤100。</li><li>对于 100% 的数据，有 1≤n≤14,k≤100,T≤10。</li><li>时间限制：10s</li><li>空间限制：512MB</li></ul><h3 id="解释："><a href="#解释：" class="headerlink" title="解释："></a>解释：</h3><ul><li>关于魔防可以认为打完一个怪总伤害会减去魔防的值，也可以理解成每次打怪前你有一个血量为魔防值的护盾，怪物会优先扣护盾的血量。</li><li>比如说你的攻击是15，防御是5，魔防是7，怪物血量是20，攻击是20，防御是5，没有特殊属性。</li><li>那么你可以在2轮杀死怪物，怪物会攻击你1轮。你打这个怪受到的伤害为max(15−7,0)。</li><li>你每次可以选择打一个不违反限制的怪或者吃一个不违反限制的宝石。</li><li>样例1只要按顺序打怪并且吃宝石即可。</li><li>两个人轮流攻击，我们记A为勇士，B为怪物。</li><li>那么先攻的攻击顺序为BABABA…</li><li>二连击的攻击顺序为ABBABBABB…</li></ul><h3 id="吐槽-amp-题解："><a href="#吐槽-amp-题解：" class="headerlink" title="吐槽&amp;题解："></a>吐槽&amp;题解：</h3><ul><li>古老的魔塔游戏2333</li><li>跟10k大模拟没有毛线关系（不愧是<del>传说中的毒瘤出题人</del>）</li><li>三进制状压。。。（看到数据范围想到二进制状压emmm）</li><li>第i位为0表示没打第i位怪，1表示打了怪没吃水晶<strong>（Q：为什么会不吃水晶呢？A：因为有模仿怪呀！）</strong>，2表示打了怪吃了水晶。</li><li>因为答案是要求最大血量，那么我们就用<strong>f[i]</strong>来表示<strong>i这个状态最大的血量</strong>，然后预处理出各个状态的攻击，防御，魔防。</li><li>转移的话，第i只怪的位置如果要从<strong>0-&gt;1</strong>，则先判断在这只怪之前必打的怪打了没有，然后如果<strong>S（S为以当前状态k的属性打这个怪后的血量）</strong>大于<strong>要更新的状态$f[k+3^{i-1}]$</strong>，那就更新。</li><li>而如果要从<strong>1-&gt;2</strong>，则只要<strong>$f[k+3^{i-1}]=max(f[k+3^{i-1}],f[k]+hp[i])$</strong>,因为其它属性已经预处理好了。</li><li>至于打怪操作和怪的特殊属性，大力模拟就好了。。。</li></ul><h3 id="贴个代码。。。暴力都打不来的我真是太弱了。"><a href="#贴个代码。。。暴力都打不来的我真是太弱了。" class="headerlink" title="贴个代码。。。暴力都打不来的我真是太弱了。"></a>贴个代码。。。暴力都打不来的我真是太弱了。</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//三进制状压 0-&gt;没打 1-&gt;打了没吃 2-&gt;打了吃了 </span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> maxn 15</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> maxx 4783970</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> A,D;</span><br><span class="line">ll H;</span><br><span class="line"><span class="keyword">int</span> N,M,T,K;</span><br><span class="line"><span class="keyword">int</span> h[maxn],a[maxn],d[maxn],s[maxn];</span><br><span class="line"><span class="keyword">int</span> ph[maxn],pa[maxn],pd[maxn],pm[maxn];</span><br><span class="line"><span class="keyword">int</span> mi[maxn];</span><br><span class="line"><span class="keyword">int</span> fa[maxx],fd[maxx],fm[maxx];</span><br><span class="line">ll f[maxx];</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;Pre[maxn];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">ins</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span>&#123;</span><br><span class="line">Pre[a].push_back(b);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">ll <span class="title">beat</span><span class="params">(ll H,<span class="keyword">int</span> A,<span class="keyword">int</span> D,<span class="keyword">int</span> M,<span class="keyword">int</span> h,<span class="keyword">int</span> a,<span class="keyword">int</span> d,<span class="keyword">int</span> s)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(s&amp;<span class="number">8</span>)a=A,d=D;</span><br><span class="line"><span class="keyword">if</span>(s&amp;<span class="number">2</span>)D=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> o=<span class="number">1</span>+((s&gt;&gt;<span class="number">2</span>)&amp;<span class="number">1</span>);</span><br><span class="line"><span class="keyword">int</span> X=max(<span class="number">0</span>,a-D)*o;<span class="comment">//怪伤 </span></span><br><span class="line"><span class="keyword">int</span> x=max(<span class="number">0</span>,A-d);<span class="comment">//人伤 </span></span><br><span class="line"><span class="keyword">if</span>(x==<span class="number">0</span>)<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">ll S=<span class="number">1l</span>l*((h<span class="number">-1</span>)/x+<span class="number">1</span>-(~s&amp;<span class="number">1</span>))*X;</span><br><span class="line"><span class="keyword">if</span>(S&gt;H+M)<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>(S&gt;M)H=H-(S-M);</span><br><span class="line"><span class="keyword">return</span> H;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">mi[<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;<span class="number">15</span>;++i)mi[i]=mi[i<span class="number">-1</span>]+(mi[i<span class="number">-1</span>]&lt;&lt;<span class="number">1</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;T);</span><br><span class="line"><span class="keyword">while</span>(T--)&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%lld%d%d%d"</span>,&amp;H,&amp;A,&amp;D,&amp;M);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;N);</span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=N;++i)Pre[i].clear();</span><br><span class="line"><span class="built_in">memset</span>(f,<span class="number">0</span>,<span class="keyword">sizeof</span>(f));</span><br><span class="line">f[<span class="number">0</span>]=H;</span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=N;++i)&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d%d%d%d"</span>,&amp;h[i],&amp;a[i],&amp;d[i],&amp;s[i]);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d%d%d%d"</span>,&amp;pa[i],&amp;pd[i],&amp;pm[i],&amp;ph[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;K);</span><br><span class="line"><span class="keyword">int</span> u,v;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=K;++i)&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;u,&amp;v);</span><br><span class="line">ins(v,u);<span class="comment">//***</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> tot=mi[N]<span class="number">-1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">0</span>;k&lt;=tot;++k)&#123;</span><br><span class="line">fa[k]=A,fd[k]=D,fm[k]=M;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=N;++i)&#123;</span><br><span class="line"><span class="keyword">if</span>(k/mi[i<span class="number">-1</span>]%<span class="number">3</span>==<span class="number">2</span>)&#123;</span><br><span class="line">fa[k]+=pa[i],fd[k]+=pd[i],fm[k]+=pm[i];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">0</span>;k&lt;=tot;++k)&#123;</span><br><span class="line"><span class="keyword">if</span>(!f[k])<span class="keyword">continue</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=N;++i)&#123;</span><br><span class="line"><span class="keyword">if</span>(k/mi[i<span class="number">-1</span>]%<span class="number">3</span>==<span class="number">0</span>)&#123;</span><br><span class="line"><span class="keyword">bool</span> bz=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;Pre[i].size();++j)&#123;</span><br><span class="line"><span class="keyword">if</span>(k/mi[Pre[i][j]<span class="number">-1</span>]%<span class="number">3</span>==<span class="number">0</span>)&#123;</span><br><span class="line">bz=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(bz)<span class="keyword">continue</span>;</span><br><span class="line">ll S=beat(f[k],fa[k],fd[k],fm[k],h[i],a[i],d[i],s[i]);</span><br><span class="line"><span class="keyword">if</span>(S&gt;<span class="number">0</span>)f[k+mi[i<span class="number">-1</span>]]=max(f[k+mi[i<span class="number">-1</span>]],S);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">if</span>(k/mi[i<span class="number">-1</span>]%<span class="number">3</span>==<span class="number">1</span>)&#123;</span><br><span class="line">f[k+mi[i<span class="number">-1</span>]]=max(f[k+mi[i<span class="number">-1</span>]],f[k]+ph[i]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(f[tot]==<span class="number">0</span>)<span class="built_in">printf</span>(<span class="string">"-1\n"</span>);</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,f[tot]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;传送门：ZROJ2018D6T1—萌新拆塔&quot;&gt;&lt;a href=&quot;#传送门：ZROJ2018D6T1—萌新拆塔&quot; class=&quot;headerlink&quot; title=&quot;传送门：ZROJ2018D6T1—萌新拆塔&quot;&gt;&lt;/a&gt;&lt;strong&gt;传送门：&lt;/strong&gt;&lt;a
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>POJ3764--The xor-longest Path</title>
    <link href="https://chjinqi.github.io/2018/08/03/POJ3764/"/>
    <id>https://chjinqi.github.io/2018/08/03/POJ3764/</id>
    <published>2018-08-03T11:26:39.000Z</published>
    <updated>2018-12-08T13:35:02.058Z</updated>
    
    <content type="html"><![CDATA[<h1 id="传送门：POJ3764—The-xor-longest-Path"><a href="#传送门：POJ3764—The-xor-longest-Path" class="headerlink" title="传送门：POJ3764—The xor-longest Path"></a><strong>传送门：</strong><a href="http://poj.org/problem?id=3764" target="_blank" rel="noopener">POJ3764—The xor-longest Path</a><br></h1><h3 id="题目大意-在一颗带权的树上，求任意两点间路径上各边权值异或和的最大值。"><a href="#题目大意-在一颗带权的树上，求任意两点间路径上各边权值异或和的最大值。" class="headerlink" title="题目大意:在一颗带权的树上，求任意两点间路径上各边权值异或和的最大值。"></a><strong>题目大意:</strong>在一颗带权的树上，求任意两点间路径上各边权值异或和的最大值。<br></h3><h3 id="题目解法：设dis-u-v-为u-v间路径上各边权值异或和。"><a href="#题目解法：设dis-u-v-为u-v间路径上各边权值异或和。" class="headerlink" title="题目解法：设dis(u,v)为u,v间路径上各边权值异或和。"></a><strong>题目解法：</strong>设dis(u,v)为u,v间路径上各边权值异或和。<br></h3><p>显然dis(u,v)==dis(root,u)^dis(root,v),所以问题转换为求任意两个点i,j到root的路径上各边权值异或和最大。<br><br>于是我们用dfs预处理，把每个dis(root,i)丢进一个二进制trie中。<br><br>那每丢一个dis(root,i)，显然要在trie中找能使尽量多的二进制位与dis(root,i)相反，这样才能使这两个的异或和最大，这其实就是个贪心。<br><br><del>真相は一つしかない:</del> 正解就是trie+贪心（逃<br></p><h3 id="嗯♂-代码实现如下："><a href="#嗯♂-代码实现如下：" class="headerlink" title="嗯♂~~~代码实现如下："></a>嗯♂~~~代码实现如下：<br></h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> maxn 100005</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> N;</span><br><span class="line"><span class="keyword">int</span> _last[maxn],_next[maxn&lt;&lt;<span class="number">1</span>],_end[maxn&lt;&lt;<span class="number">1</span>],_len[maxn&lt;&lt;<span class="number">1</span>];</span><br><span class="line"><span class="keyword">int</span> val[maxn];</span><br><span class="line"><span class="keyword">int</span> o;</span><br><span class="line"><span class="keyword">int</span> tot;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">ins</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b,<span class="keyword">int</span> c)</span></span>&#123;</span><br><span class="line">_end[++o]=b;</span><br><span class="line">_next[o]=_last[a];</span><br><span class="line">_last[a]=o;</span><br><span class="line">_len[o]=c;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">inss</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b,<span class="keyword">int</span> c)</span></span>&#123;</span><br><span class="line">ins(a,b,c);</span><br><span class="line">ins(b,a,c);</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line"><span class="keyword">int</span> son[<span class="number">2</span>];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span>&#123;</span><br><span class="line">son[<span class="number">0</span>]=son[<span class="number">1</span>]=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line">node tri[<span class="number">4000005</span>];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> fa)</span></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=_last[u];i;i=_next[i])&#123;</span><br><span class="line"><span class="keyword">int</span> v=_end[i];</span><br><span class="line"><span class="keyword">if</span>(v==fa)<span class="keyword">continue</span>;</span><br><span class="line">val[v]=val[u]^_len[i];</span><br><span class="line">dfs(v,u);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> p=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> o=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">30</span>;i&gt;=<span class="number">0</span>;--i)&#123;</span><br><span class="line"><span class="keyword">if</span>(x&amp;(<span class="number">1</span>&lt;&lt;i))o=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">else</span> o=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>(!tri[p].son[o])&#123;</span><br><span class="line">tri[p].son[o]=++tot;</span><br><span class="line">tri[tot].init();</span><br><span class="line">&#125;</span><br><span class="line">p=tri[p].son[o];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">gs</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> num=<span class="number">0</span>,p=<span class="number">0</span>,o=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">30</span>;i&gt;=<span class="number">0</span>;--i)&#123;</span><br><span class="line"><span class="keyword">if</span>(x&amp;(<span class="number">1</span>&lt;&lt;i))o=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">else</span> o=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(tri[p].son[o])&#123;</span><br><span class="line">num|=(<span class="number">1</span>&lt;&lt;i);</span><br><span class="line">p=tri[p].son[o];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> p=tri[p].son[o^<span class="number">1</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> num;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;N)!=EOF)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=o;++i)_last[i]=<span class="number">0</span>;</span><br><span class="line">o=<span class="number">0</span>;</span><br><span class="line">tot=<span class="number">0</span>;</span><br><span class="line">tri[tot].init();</span><br><span class="line">val[<span class="number">1</span>]=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> u,v,w;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;N;++i) &#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>,&amp;u,&amp;v,&amp;w);</span><br><span class="line">++u;</span><br><span class="line">++v;</span><br><span class="line">inss(u,v,w);</span><br><span class="line">&#125;</span><br><span class="line">dfs(<span class="number">1</span>,<span class="number">0</span>);</span><br><span class="line"><span class="keyword">int</span> ans=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=N;++i)&#123;</span><br><span class="line">ans=max(ans,gs(val[i]));</span><br><span class="line">add(val[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;传送门：POJ3764—The-xor-longest-Path&quot;&gt;&lt;a href=&quot;#传送门：POJ3764—The-xor-longest-Path&quot; class=&quot;headerlink&quot; title=&quot;传送门：POJ3764—The xor-longest 
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Hello world!!!</title>
    <link href="https://chjinqi.github.io/2018/07/23/hello-world/"/>
    <id>https://chjinqi.github.io/2018/07/23/hello-world/</id>
    <published>2018-07-23T15:50:00.000Z</published>
    <updated>2018-07-26T14:23:30.481Z</updated>
    
    <content type="html"><![CDATA[<p>啊♂，终于搞好了,可以搞事了（嘿嘿嘿）<br><img src="https://gss0.baidu.com/-Po3dSag_xI4khGko9WTAnF6hhy/zhidao/pic/item/c75c10385343fbf2094235f6b27eca8064388ffd.jpg" alt=""></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;啊♂，终于搞好了,可以搞事了（嘿嘿嘿）&lt;br&gt;&lt;img src=&quot;https://gss0.baidu.com/-Po3dSag_xI4khGko9WTAnF6hhy/zhidao/pic/item/c75c10385343fbf2094235f6b27eca8064388
      
    
    </summary>
    
    
  </entry>
  
</feed>
